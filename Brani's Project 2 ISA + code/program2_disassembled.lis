
INIT r0, 1 //rx = imm
INIT r1, 0 //rx = imm
SWD r0, r1 //M[ry] = rx
INIT r0, 3 //rx = imm
ADDI r0, 2 //rx = rx + imm
INIT r1, 1 //rx = imm
SWD r0, r1 //M[ry] = rx
INIT r0, 3 //rx = imm
ADDI r0, 1 //rx = rx + imm
INIT r1, 2 //rx = imm
SWD r0, r1 //M[ry] = rx
INIT r0, 1 //rx = imm
INIT r1, 2 //rx = imm
LWD r2, r1 //rx = M[ry]
ADDI r2, 3 //rx = rx + imm
SWD r0, r1 //M[ry] = rx
INIT r0, 1 //rx = imm
LWD r2, r0 //rx = M[ry]
INIT r0, 3 //rx = imm
LWD r3, r0 //rx = M[ry]
LWD r0, r2 //rx = M[ry]
XOR r0, r3 //rx = rx XOR ry
INIT r0, 2 //rx = imm
JIF -6 //If r3 = 1 then jump (PC = PC + imm)
	//Else do nothing
JIF -6 //If r3 = 1 then jump (PC = PC + imm)
	//Else do nothing
LWD r2, r0 //rx = M[ry]
SWD r3, r2 //M[ry] = rx
INIT r0, 2 //rx = imm
LWD r2, r0 //rx = M[ry]
ADDI r2, 1 //rx = rx + imm
LWD r0, r2 //rx = M[ry]
JIF -7 //If r3 = 1 then jump (PC = PC + imm)
	//Else do nothing
JIF -7 //If r3 = 1 then jump (PC = PC + imm)
	//Else do nothing
SLE r0, 3 //If rx < ry then r3 = 1
	//Else r3 = 0
JIF 4 //If r3 = 1 then jump (PC = PC + imm)
	//Else do nothing
JIF 4 //If r3 = 1 then jump (PC = PC + imm)
	//Else do nothing
SWD r3, r2 //M[ry] = rx
INIT r3, 1 //rx = imm
JIF 7 //If r3 = 1 then jump (PC = PC + imm)
	//Else do nothing
JIF 7 //If r3 = 1 then jump (PC = PC + imm)
	//Else do nothing
ADDN//r3 = r3 - 1
JIF -7 //If r3 = 1 then jump (PC = PC + imm)
	//Else do nothing
JIF -7 //If r3 = 1 then jump (PC = PC + imm)
	//Else do nothing
SLE r0, 3 //If rx < ry then r3 = 1
	//Else r3 = 0
JIF 3 //If r3 = 1 then jump (PC = PC + imm)
	//Else do nothing
JIF 3 //If r3 = 1 then jump (PC = PC + imm)
	//Else do nothing
INIT r0, 0 //rx = imm
LWD r2, r0 //rx = M[ry]
JIF 6 //If r3 = 1 then jump (PC = PC + imm)
	//Else do nothing
JIF 6 //If r3 = 1 then jump (PC = PC + imm)
	//Else do nothing
ADDI r2, 1 //rx = rx + imm
JIF -7 //If r3 = 1 then jump (PC = PC + imm)
	//Else do nothing
JIF -7 //If r3 = 1 then jump (PC = PC + imm)
	//Else do nothing
LWD r3, r2 //rx = M[ry]
ADDI r3, 1 //rx = rx + imm
SWD r3, r2 //M[ry] = rx
INIT r0, 1 //rx = imm
LWD r2, r0 //rx = M[ry]
JIF -6 //If r3 = 1 then jump (PC = PC + imm)
	//Else do nothing
JIF -6 //If r3 = 1 then jump (PC = PC + imm)
	//Else do nothing
ADDI r2, 1 //rx = rx + imm
INIT r0, 2 //rx = imm
LWD r3, r0 //rx = M[ry]
ADDI r3, 3 //rx = rx + imm
LWD r3, r3 //rx = M[ry]
SLER r2, r1 //If rx < r0 then r3 = 1
	//Else r3 = 0
JIF -7 //If r3 = 1 then jump (PC = PC + imm)
	//Else do nothing
JIF -7 //If r3 = 1 then jump (PC = PC + imm)
	//Else do nothing
